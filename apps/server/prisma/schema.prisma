// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  userRoles  UserRole[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id               Int              @id @default(autoincrement())
  name             String           @unique
  userRoles        UserRole[]
  rolePermissions  RolePermission[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  id               Int              @id @default(autoincrement())
  name             String           @unique
  rolePermissions  RolePermission[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// User 和 Role 的中间表
model UserRole {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  role    Role  @relation(fields: [roleId], references: [id])
  roleId  Int

  @@unique([userId, roleId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Role 和 Permission 的中间表
model RolePermission {
  id            Int         @id @default(autoincrement())
  role          Role        @relation(fields: [roleId], references: [id])
  roleId        Int
  permission    Permission  @relation(fields: [permissionId], references: [id])
  permissionId  Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  
  @@unique([roleId, permissionId])
}